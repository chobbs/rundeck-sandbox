- defaultTab: nodes
  description: "Self Service [SRE Automation] \U0001f4e6\n*Background: Based upon\
    \ a real customer request to reduce overhead on SRE Teams, while preserving guard\
    \ rails, security and auditing.*\n\n    Teams SRE, Operations\n    Technologies:\
    \ Kubernetes,Grafana,Helm,Slack\n\n - This job will take both a business unit\
    \ and an additional note  \n - Job Option has guard rails to ensure lower case\
    \ values are entered\n - It  will utilise Helm to deploy a Kubernetes namespace\
    \ based on the   \n   business unit \n - an instance of Grafana Admin password\
    \ and URL will be retrieved\n   and passed to a sample slack channel (https://app.slack.com/client/T031P1Q9LRY/C0334G189P0)\n\
    \nRuns on: K8s Nodes via `Kubectl`\n"
  executionEnabled: true
  group: 'Service Automation '
  id: 4c7d7373-9363-49de-9436-59a708a11761
  loglevel: INFO
  name: Grafana application deployment for business unit
  nodeFilterEditable: false
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '1'
    filter: 'name: ec2-node-3 '
  nodesSelectedByDefault: true
  options:
  - description: |-
      Your business unit will need to be lower case, no spaces.
      eg. london
    label: 'Please enter business unit '
    name: Namespace
    regex: ^[a-z]+$
    required: true
  - description: You can add any additional info here regarding the deployment
    label: Please add additional notes for Instance.
    name: additionalinfo
  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - description: Use K8s Namespace for business unit. Check it does not exist.
      script: |-
        NAMESPACE_NAME=@option.Namespace@
        NS=$(kubectl get namespace $NAMESPACE_NAME --ignore-not-found);
        if [[ "$NS" ]]; then
          echo "Skipping creation of namespace $NAMESPACE_NAME - already exists";
        else
          echo "Creating namespace $NAMESPACE_NAME";
          kubectl create namespace $NAMESPACE_NAME;
        fi;
    - description: Install grafana/grafana via Helm
      exec: helm install ${option.Namespace} grafana/grafana --namespace ${option.Namespace}
    - description: Extract Admin Password for Instance
      exec: kubectl get secret --namespace  ${unquotedoption.Namespace} ${unquotedoption.Namespace}-grafana
        -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'false'
            name: password
            regex: (.*)
          type: key-value-data
    - description: Extract URL from Response
      exec: echo "https://${unquotedoption.Namespace}-grafana.${unquotedoption.Namespace}.svc.cluster.local"
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: url
            regex: (.*)
          type: key-value-data
    - description: Check Health - Get pods running
      exec: kubectl get namespaces
      plugins:
        LogFilter:
        - config:
            hideOutput: 'false'
            logData: 'true'
            name: capacity
            regex: (.*)
          type: key-value-data-multilines
    - description: Get Data
      jobref:
        args: -label1 "Admin URL" -label2 "Admin Password" -data1 ${data.url}  -data2
          ${data.password}  -label3 "K8s Capacity" -data3 ${data.capacity} -label4
          "Additional Information" -data4 ${option.additionalinfo}
        group: Reusable Jobs
        name: Template slack notification
        nodeStep: 'true'
        uuid: 199e742b-c67a-46e9-a522-c9d0c2f0279e
    keepgoing: false
    strategy: node-first
  tags: 'grafana,helm,k8s,slack'
  uuid: 4c7d7373-9363-49de-9436-59a708a11761

